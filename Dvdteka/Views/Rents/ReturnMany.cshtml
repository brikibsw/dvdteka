@model Dvdteka.Models.ReturnManyViewModel

@{
    ViewData["Title"] = "Povrat";
}

<h1>Povrat</h1>

<form asp-action="SaveReturnMany" method="post">
    <div id="errors" asp-validation-summary="All" class="text-danger"></div>
    <input asp-for="ReturnTime" class="form-control" />

    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>
                    DvdName
                </th>
                <th>
                    MemberName
                </th>
                <th>
                    RentTime
                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Rents.Count(); i++)
            {
                <tr>
                    <td>
                        <div class="form-check">
                            <input type="hidden" asp-for="@Model.Rents[i].Id" />
                            <input type="hidden" asp-for="@Model.Rents[i].RentTime" />
                            <input type="hidden" asp-for="@Model.Rents[i].MemberId" />
                            <input onclick="checkboxClicked(@Model.Rents[i].Id)" asp-for="@Model.Rents[i].Returning" type="checkbox" class="form-check-input">
                        </div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.Rents[i].DvdName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.Rents[i].MemberName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.Rents[i].RentTime)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex flex-row-reverse">
        @if (!ViewBag.error)
        {
            <input type="submit" name="save" id="save" value="Spremi" class="btn btn-success" />
        }
        else
        {
            <input disabled type="submit" id="save" name="save" value="Spremi" class="btn btn-success" />
        }
    </div>
</form>

@section Scripts {

    <script type="text/javascript">

        var items = @( Json.Serialize( Model.Rents.Select(a => new { Id = a.Id, MemberId = a.MemberId, Checked = a.Returning }) ));

        function checkboxClicked(id) {
            var checkedItems = [];
            for (var i = 0; i < items.length; i++) {
                var item = items[i];
                if (item.id == id) {
                    item.checked = !item.checked;
                }

                if (item.checked) {
                    checkedItems.push(item);
                }
            }

            var grouped = groupBy(checkedItems, 'memberId');
            var valid = grouped.length == 1;
            var btn = document.getElementById("save");
            btn.disabled = !valid;

            var errorsDiv = document.getElementById("errors");
            if (errorsDiv != null && errorsDiv != undefined) {
                if (valid) {
                    errorsDiv.style.display = "none";
                } else {
                    errorsDiv.style.display = "block";
                }
            }
        }

        function groupBy(array, col) {
            var r = [], o = {};
            array.forEach(function (a) {
                if (!o[a[col]]) {
                    o[a[col]] = {};
                    o[a[col]][col] = a[col];
                    r.push(o[a[col]]);
                }
            });
            return r;
        };


    </script>
}